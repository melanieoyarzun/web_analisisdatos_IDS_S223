reticulate::repl_python()
reticulate::repl_python()
quarto publish
quarto publish
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
# custom knit_print functions for data.frame
library(knitr)
# print everything as paged ----
# knit_print.data.frame <- function (x, options, ...) {
#   rmarkdown::paged_table(x, options) |>
#     rmarkdown:::print.paged_df()
# }
# registerS3method("knit_print", "data.frame", knit_print.data.frame)
# print everything as kable ----
# knit_print.data.frame <- function (x, options, ...) {
#   knitr::kable(x) |> knitr::knit_print(options, ...)
# }
# registerS3method("knit_print", "data.frame", knit_print.data.frame)
# super-customised table printing ----
`%||%` <- function(l, r) {
if (is.null(l)) r else l
}
knit_print.data.frame <- function (x, options, ...) {
# get options
digits <- options$digits %||% getOption("digits")
rownames <- options$rownames %||% FALSE
pageLength <- options$pageLength %||% 10
escape <- options$escape %||% TRUE
caption <- options$fig.cap
# remove caption so it doesn't print twice (NOT WORKING)
options$fig.cap <- NULL
# use DT for longer tables in html
if (nrow(x) > pageLength & knitr::is_html_output()) {
numeric_cols <- sapply(x, is.numeric) |> which() |> names()
dt <- DT::datatable(x,
rownames = rownames,
caption = caption,
escape = escape,
width = "100%",
height = "auto",
options = list(pageLength = pageLength),
selection = "none")
if (length(numeric_cols) > 0) {
dt <- DT::formatRound(dt,
columns = numeric_cols,
digits = digits)
}
knitr::knit_print(dt, options)
} else {
# use kableExtra::kable for PDFs or shorter tables
k <- kableExtra::kable(x,
digits = digits,
row.names = rownames,
caption = caption,
escape = escape) |>
kableExtra::kable_styling(
full_width = options$full_width,
bootstrap_options = c("striped", "hover")
)
if (knitr::is_html_output()) {
k <- c("<div class=\"kable-table\">", k, "</div>") |>
paste(collapse = "\n")
}
knitr::asis_output(k)
}
}
registerS3method("knit_print", "data.frame", knit_print.data.frame)
df5 <- data.frame(x = rnorm(5), y = LETTERS[1:5])
df26 <- data.frame(x = rnorm(26), y = LETTERS)
tbl5 <- tibble::tibble(x = rnorm(5), y = LETTERS[1:5])
tbl26 <- tibble::tibble(x = rnorm(26), y = LETTERS)
df5
df26
tbl5
tbl26
# digits = 3
tbl5
# digits = 4
tbl26
# rownames = TRUE
tbl5
# rownames = TRUE
tbl26
# fig.cap="This is my figure caption for a tibble with 5 rows"
tbl5
# fig.cap="This is my figure caption for a tibble with 26 rows"
tbl26
# pageLength = 3, so should be a DT
tbl5
# pageLength = 30, so should be a kable
tbl26
# escape = FALSE
tibble::tibble(styles = c("<i>italics</i>", "<b>bold</b>"))
# escape = FALSE
tibble::tibble(styles = rep(c("<i>italics</i>", "<b>bold</b>"), 10))
# full_width = TRUE
tbl5
# full_width = FALSE
tbl5
install.packages(kableExtra)
